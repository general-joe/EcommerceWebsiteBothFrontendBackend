2024-04-23T22:07:50.153Z [31merror[39m:	
Invalid `prisma.collection.findMany()` invocation in
C:\Users\Lyfer\Documents\Project\MerchUp\Backend\helpers\collection.js:10:46

   7 };
   8 
   9 const getCollection = async () => {
â†’ 10   const collection = await prisma.collection.findMany({
         orderBy: {
           createdAT: "desc",
           id: true,
               ~~~~
           type: true,
           include: {
             clothes: true
           }
         }
       })

Invalid value for argument `id`. Expected SortOrder.
2024-04-23T22:08:20.144Z [31merror[39m:	
Invalid `prisma.collection.findMany()` invocation in
C:\Users\Lyfer\Documents\Project\MerchUp\Backend\helpers\collection.js:10:46

   7 };
   8 
   9 const getCollection = async () => {
â†’ 10   const collection = await prisma.collection.findMany({
         orderBy: {
           createdAT: "desc",
           type: true,
                 ~~~~
           include: {
             clothes: true
           }
         }
       })

Invalid value for argument `type`. Expected SortOrder.
2024-04-23T22:08:36.495Z [31merror[39m:	
Invalid `prisma.collection.findMany()` invocation in
C:\Users\Lyfer\Documents\Project\MerchUp\Backend\helpers\collection.js:10:46

   7 };
   8 
   9 const getCollection = async () => {
â†’ 10   const collection = await prisma.collection.findMany({
         orderBy: {
           createdAT: "desc",
           include: {
           ~~~~~~~
             clothes: true
           },
       ?   id?: SortOrder,
       ?   type?: SortOrder,
       ?   updatedAT?: SortOrder,
       ?   clothes?: clothesOrderByRelationAggregateInput
         }
       })

Unknown argument `include`. Available options are marked with ?.
2024-04-23T22:09:23.784Z [31merror[39m:	
Invalid `prisma.collection.findMany()` invocation in
C:\Users\Lyfer\Documents\Project\MerchUp\Backend\helpers\collection.js:10:46

   7 };
   8 
   9 const getCollection = async () => {
â†’ 10   const collection = await prisma.collection.findMany({
         orderBy: {
           createdAT: "desc",
           select: {
           ~~~~~~
             clothes: true
           },
       ?   id?: SortOrder,
       ?   type?: SortOrder,
       ?   updatedAT?: SortOrder,
       ?   clothes?: clothesOrderByRelationAggregateInput
         }
       })

Unknown argument `select`. Available options are marked with ?.
